/*
 * ID LINK
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package idlink.ig.client.api;

import io.swagger.client.ApiException;
import idlink.ig.client.model.AdminAddIdentityPoolRequest;
import idlink.ig.client.model.AdminAddIdentityPoolResponse;
import idlink.ig.client.model.AdminDeleteIdentityPoolRequest;
import idlink.ig.client.model.AdminDeleteIdentityPoolResponse;
import idlink.ig.client.model.AdminGenerateNewClientSecretRequest;
import idlink.ig.client.model.AdminGenerateNewClientSecretResponse;
import idlink.ig.client.model.AdminGetClientByPoolIdRequest;
import idlink.ig.client.model.AdminGetClientByPoolIdResponse;
import idlink.ig.client.model.AdminListIdentityPoolsResponse;
import idlink.ig.client.model.AdminResetPoolManagerSecretResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenantApi
 */
@Ignore
public class TenantApiTest {

    private final TenantApi api = new TenantApi();

    /**
     * Add identity pool as an administrator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminAddIdentityPoolTest() throws ApiException {
        AdminAddIdentityPoolRequest body = null;
        String X_API_TENANT_ID = null;
        Long X_API_TIMESTAMP = null;
        String X_API_TOKEN = null;
        AdminAddIdentityPoolResponse response = api.adminAddIdentityPool(body, X_API_TENANT_ID, X_API_TIMESTAMP, X_API_TOKEN);

        // TODO: test validations
    }
    /**
     * Delete identity pool as an administrator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminDeleteIdentityPoolTest() throws ApiException {
        AdminDeleteIdentityPoolRequest body = null;
        String X_API_TENANT_ID = null;
        Long X_API_TIMESTAMP = null;
        String X_API_TOKEN = null;
        AdminDeleteIdentityPoolResponse response = api.adminDeleteIdentityPool(body, X_API_TENANT_ID, X_API_TIMESTAMP, X_API_TOKEN);

        // TODO: test validations
    }
    /**
     * Generate new client secret as an administrator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminGenerateNewClientSecretTest() throws ApiException {
        AdminGenerateNewClientSecretRequest body = null;
        String X_API_TENANT_ID = null;
        Long X_API_TIMESTAMP = null;
        String X_API_TOKEN = null;
        AdminGenerateNewClientSecretResponse response = api.adminGenerateNewClientSecret(body, X_API_TENANT_ID, X_API_TIMESTAMP, X_API_TOKEN);

        // TODO: test validations
    }
    /**
     * Get pool secret as an administrator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminGetClientByPoolIdTest() throws ApiException {
        AdminGetClientByPoolIdRequest body = null;
        String X_API_TENANT_ID = null;
        Long X_API_TIMESTAMP = null;
        String X_API_TOKEN = null;
        AdminGetClientByPoolIdResponse response = api.adminGetClientByPoolId(body, X_API_TENANT_ID, X_API_TIMESTAMP, X_API_TOKEN);

        // TODO: test validations
    }
    /**
     * List identity pools as an administrator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminListIdentityPoolsTest() throws ApiException {
        String X_API_TENANT_ID = null;
        Long X_API_TIMESTAMP = null;
        String X_API_TOKEN = null;
        AdminListIdentityPoolsResponse response = api.adminListIdentityPools(X_API_TENANT_ID, X_API_TIMESTAMP, X_API_TOKEN);

        // TODO: test validations
    }
    /**
     * Reset pool manager secret as an administrator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminResetPoolManagerSecretTest() throws ApiException {
        String X_API_TENANT_ID = null;
        Long X_API_TIMESTAMP = null;
        String X_API_TOKEN = null;
        AdminResetPoolManagerSecretResponse response = api.adminResetPoolManagerSecret(X_API_TENANT_ID, X_API_TIMESTAMP, X_API_TOKEN);

        // TODO: test validations
    }
}

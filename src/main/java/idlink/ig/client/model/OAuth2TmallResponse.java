/*
 * ID LINK
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package idlink.ig.client.model;

import org.apache.commons.lang3.ObjectUtils;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Response data model
 */
@Schema(description = "Response data model")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-10T17:25:26.265+08:00[Asia/Shanghai]")
public class OAuth2TmallResponse {
  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("data")
  private Object data = null;

  @SerializedName("detail")
  private String detail = null;

  @SerializedName("expires_in")
  private Long expiresIn = null;

  @SerializedName("httpStatus")
  private String httpStatus = null;

  @SerializedName("refresh_token")
  private String refreshToken = null;

  public OAuth2TmallResponse accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * access_token
   * @return accessToken
  **/
  @Schema(description = "access_token")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public OAuth2TmallResponse data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * Response data
   * @return data
  **/
  @Schema(description = "Response data")
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }

  public OAuth2TmallResponse detail(String detail) {
    this.detail = detail;
    return this;
  }

   /**
   * Response message
   * @return detail
  **/
  @Schema(example = "Operation success", description = "Response message")
  public String getDetail() {
    return detail;
  }

  public void setDetail(String detail) {
    this.detail = detail;
  }

  public OAuth2TmallResponse expiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * expires_in
   * @return expiresIn
  **/
  @Schema(description = "expires_in")
  public Long getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
  }

  public OAuth2TmallResponse httpStatus(String httpStatus) {
    this.httpStatus = httpStatus;
    return this;
  }

   /**
   * Response status
   * @return httpStatus
  **/
  @Schema(example = "OK", required = true, description = "Response status")
  public String getHttpStatus() {
    return httpStatus;
  }

  public void setHttpStatus(String httpStatus) {
    this.httpStatus = httpStatus;
  }

  public OAuth2TmallResponse refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * refresh_token
   * @return refreshToken
  **/
  @Schema(description = "refresh_token")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    OAuth2TmallResponse oauth2TmallResponse = (OAuth2TmallResponse) o;
    return ObjectUtils.equals(this.accessToken, oauth2TmallResponse.accessToken) &&
    ObjectUtils.equals(this.data, oauth2TmallResponse.data) &&
    ObjectUtils.equals(this.detail, oauth2TmallResponse.detail) &&
    ObjectUtils.equals(this.expiresIn, oauth2TmallResponse.expiresIn) &&
    ObjectUtils.equals(this.httpStatus, oauth2TmallResponse.httpStatus) &&
    ObjectUtils.equals(this.refreshToken, oauth2TmallResponse.refreshToken);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(accessToken, data, detail, expiresIn, httpStatus, refreshToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OAuth2TmallResponse {\n");
    
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    httpStatus: ").append(toIndentedString(httpStatus)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
